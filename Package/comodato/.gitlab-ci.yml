# Official docker image.
image: docker:dind

services:
  - docker:dind

variables:
  PROJECT_CONTAINER_IMAGE: longinus/$CI_PROJECT_NAME
  VERSION: 1.0.0
stages:
  - test
  - code-quality
  - compile
  - build-image

.test:
  stage: test
  image: maven:latest
  script:
    - mvn test
  artifacts:
    paths:
      - target/surefire-reports/TEST-*.xml
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml

.code-quality:
  stage: code-quality
  image: maven:3.8.5-openjdk-17-slim
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar" 
    GIT_DEPTH: "0" 
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - mvn clean install
    - mvn sonar:sonar verify -DskipTests=true -Dmaven.test.failure.ignore=true -Dsonar.projectKey=$PROJECT_KEY -Dsonar.host.url=$SONAR_URL -Dsonar.login=$SONAR_TOKEN -Dsonar.java.binaries=**/*
  allow_failure: true  

.compile:
  stage: compile
  image: maven:3.8.5-openjdk-17-slim
  cache:
    key: milicom
    paths:
    - ../.m2/repository
  script: 
    - echo $CI_COMMIT_MESSAGE
    - echo $CI_COMMIT_REF_NAME
    - mvn package -Drevision=$CI_PIPELINE_IID -DskipTests   
  artifacts:
    paths:
      - ./target/*.jar

.stg-build-image:
  stage: build-image
  script:
    - echo ${PROJECT_CONTAINER_IMAGE}:${VERSION}-stg
    - docker build -f ./src/main/docker/dockerfile -t ${PROJECT_CONTAINER_IMAGE}:${VERSION}-stg  .
    - docker tag ${PROJECT_CONTAINER_IMAGE}:${VERSION}-stg  $NEXUS_REGISTER_SERVER/${PROJECT_CONTAINER_IMAGE}:${VERSION}-stg
    - docker login -u $CI_LON_REGISTRY_USER -p $CI_LON_REGISTRY_PASSWORD $NEXUS_REGISTER_SERVER
    - docker push $NEXUS_REGISTER_SERVER/${PROJECT_CONTAINER_IMAGE}:${VERSION}-stg
    - docker rmi ${PROJECT_CONTAINER_IMAGE}:${VERSION}-stg

.prd-build-image:
  stage: build-image
  script:
    - echo ${PROJECT_CONTAINER_IMAGE}:${VERSION}
    - docker build -f ./src/main/docker/dockerfile -t ${PROJECT_CONTAINER_IMAGE}:${VERSION} .
    - docker tag ${PROJECT_CONTAINER_IMAGE}:${VERSION}  $NEXUS_REGISTER_SERVER/${PROJECT_CONTAINER_IMAGE}:${VERSION}
    - docker login -u $CI_LON_REGISTRY_USER -p $CI_LON_REGISTRY_PASSWORD $NEXUS_REGISTER_SERVER
    - docker push $NEXUS_REGISTER_SERVER/${PROJECT_CONTAINER_IMAGE}:${VERSION}
    - docker rmi ${PROJECT_CONTAINER_IMAGE}:${VERSION}


test:
  tags:
    - runner-aws
  only:
    - develop
  extends:
    - .test

code-quality:
  tags:
    - runner-aws
  variables:
    PROJECT_KEY: MS-TEMPLATE
  only:
    - develop
  extends:
    - .code-quality 

compile:
  tags:
    - runner-aws
  only:
    - develop
    - staging
    - main    
  extends:
    - .compile

stg-build-image:
  tags:
    - runner-aws
  only:
    - staging
  extends:
    - .stg-build-image

prd-build-image:
  tags:
    - runner-aws
  only:
    - main
  extends:
    - .prd-build-image
